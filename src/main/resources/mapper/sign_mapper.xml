<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="com.frans.sign.dao.SignDAO">

	<select id="signList" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type
			FROM sign s, sign_state ss, employee e
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND e.team_idx = #{param1} AND ss.sign_state_type = '결재완료'
			<if test="auth_type == '1'.toString()">
				AND sign_team_open = '공개'
			</if>
			AND s.sign_date BETWEEN DATE_ADD(NOW(), INTERVAL -2 WEEK ) AND NOW()
			ORDER BY ss.sign_state_type DESC, sign_idx
	</select>
	
	<select id="selTeam" resultType="com.frans.member.dto.MemberDTO">
		<!-- SELECT r.team_idx, t.team_name FROM `right` r, team t WHERE r.team_idx = t.team_idx AND r.emp_id = #{param1} AND r.auth_type > 0 -->
		SELECT r.team_idx, t.team_name, r.auth_type FROM `right` r, team t WHERE r.team_idx = t.team_idx AND r.emp_id = #{param1};
	</select>
	
	<select id="dateSearch" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type
			FROM sign s, sign_state ss, employee e
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND e.team_idx = #{param3} AND ss.sign_state_type = '결재완료'
			<if test="auth_type == '1'.toString()">
				AND sign_team_open = '공개'
			</if>
			AND s.sign_date BETWEEN #{param1} AND DATE_ADD(#{param2}, INTERVAL 1 DAY) ORDER BY ss.sign_state_type DESC, sign_idx
	</select>
	
	<!-- <select id="auth_team" resultType="String">
		SELECT team_idx FROM `right` r WHERE emp_id = #{param1}
	</select> -->
	
	<select id="auth_type" resultType="String">
		SELECT auth_type FROM `right` r WHERE emp_id = #{param2} AND team_idx = #{param1}
	</select>
	
	<select id="signWriteGo" resultType="DocFormDTO">
		SELECT df.doc_form_idx, df.doc_form_content, dt.doc_type_name, dt.doc_type_idx FROM doc_form df, document_type dt
			WHERE df.doc_type_idx = dt.doc_type_idx AND doc_form_idx = #{param1}
	</select>
	
	<select id="memberList" resultType="com.frans.member.dto.MemberDTO">
		SELECT e.emp_id, e.emp_name, t.team_name, p.pos_name FROM employee e, team t, position p
			WHERE e.team_idx = t.team_idx AND e.pos_idx = p.pos_idx AND t.team_idx NOT IN ('TM007')
	</select>
	
	<select id="membermsgList" resultType="com.frans.member.dto.MemberDTO">
		SELECT e.emp_id, e.emp_name, t.team_name, p.pos_name FROM employee e, team t, position p
			WHERE e.team_idx = t.team_idx AND e.pos_idx = p.pos_idx
	</select>
	
	<insert id="signWriteDo"
			useGeneratedKeys="true"
			keyColumn="sign_idx"
			keyProperty="sign_idx"
			parameterType="signDTO">
			INSERT INTO sign(emp_id, doc_type_idx, sign_content, sign_title, sign_team_open)
				VALUES (#{emp_id}, #{doc_type_idx}, #{sign_content},#{sign_title},
			<if test="sign_team_open.equals('공개')">'공개')</if>
			<if test="sign_team_open.equals('비공개')">'비공개')</if>
	</insert>
	
 	<insert id="signMember"
 			useGeneratedKeys="true"
			keyColumn="emp_id"
			keyProperty="emp_id"
			parameterType="signMemDTO">
			INSERT INTO sign_mem(emp_id, sign_idx, sign_mem_order, sign_mem_ip)
				VALUES(#{emp_id}, #{sign_idx}, #{sign_mem_order}, #{sign_mem_ip})
	</insert> 
	
	<insert id="refMember"
			useGeneratedKeys="true"
			keyColumn="emp_id"
			keyProperty="emp_id"
			parameterType="ReferDTO">
		INSERT INTO reference(emp_id, sign_idx) VALUES(#{emp_id}, #{sign_idx})
	</insert>
	
	<update id="docForm_use_update">
		UPDATE doc_form SET doc_form_use = doc_form_use +1 WHERE doc_form_idx = #{param1} 
	</update>
	
	<insert id="fileUpload">
		INSERT INTO file(file_sort_idx, file_from, file_ori, file_new) VALUES('3', #{param1}, #{param2}, #{param3})
	</insert>
	
	<select id="fileList" parameterType="String" resultType="String">
		SELECT file_new FROM file WHERE file_sort_idx = 3 AND file_from = #{param1} ORDER BY file_idx
	</select>
	
	<select id="orifileList" parameterType="String" resultType="String">
		SELECT file_ori FROM file WHERE file_sort_idx = 3 AND file_from = #{param1} ORDER BY file_idx
	</select>

	<select id="signDetailGo" resultType="signDTO">
		SELECT s.sign_idx, dt.doc_type_name, s.sign_team_open, s.emp_id, t.team_name, s.sign_title, s.sign_content, e.emp_name, e.emp_admin_auth, ss.sign_state_type 
			FROM sign s, employee e, document_type dt, team t, sign_state ss
			WHERE s.emp_id = e.emp_id AND e.team_idx = t.team_idx AND s.doc_type_idx = dt.doc_type_idx AND s.sign_state_idx = ss.sign_state_idx AND s.sign_idx=#{param1}
	</select>
	
 	<select id="signDetailSignmem" resultType="hashmap">
		SELECT s.sign_idx, sm.emp_id, e.emp_name, sm.sign_mem_order, sm.sign_mem_comment, sm.sign_mem_state FROM sign s, sign_mem sm, employee e 
			WHERE s.sign_idx = sm.sign_idx AND sm.emp_id = e.emp_id AND sm.sign_idx=#{param1}
	</select>
	
	<select id="signDetailRefermem" resultType="hashmap">
		SELECT s.sign_idx, r.emp_id, e.emp_name FROM sign s, reference r, employee e 
			WHERE s.sign_idx = r.sign_idx AND r.emp_id = e.emp_id AND r.sign_idx=#{param1}
	</select>
	
	<select id="selectEmpName" resultType="com.frans.member.dto.MemberDTO">
		SELECT e.emp_name, t.team_name FROM employee e, team t WHERE e.team_idx = t.team_idx AND e.emp_id = #{param1}
	</select>
	
	<select id="loginName" resultType="String">
		SELECT emp_name FROM employee WHERE emp_id = #{param1}
	</select>
	
	<select id="signHistory" resultType="SignHistoryDTO">
		SELECT e.emp_name, s.sign_idx, sm.emp_id, sm.sign_mem_ip, p.pos_name, sm.sign_mem_time, sm.sign_mem_state
			FROM sign s, sign_mem sm, sign_state ss, employee e, `position` p
			WHERE e.emp_id = sm.emp_id AND s.sign_idx = sm.sign_idx AND e.pos_idx = p.pos_idx AND s.sign_state_idx = ss.sign_state_idx AND s.sign_idx = #{param1}
	</select>
	
	<select id="lastOrder" resultType="String">
		SELECT emp_id FROM sign_mem
			WHERE sign_mem_order = (SELECT (SELECT count(emp_id) FROM sign_mem sm WHERE sign_idx=s.sign_idx) FROM sign s WHERE s.sign_idx = #{param1}) AND sign_idx = #{param1}
	</select>
	
	<update id="signMemUpdate">
		UPDATE sign_mem set sign_mem_comment = #{param4}, sign_mem_ip = #{param3}, sign_mem_state = 1 WHERE sign_idx = #{param1} AND emp_id = #{param2}
	</update>
	
	<update id="signStateUpdate">
		UPDATE sign
				<if test="sign_order == '1'.toString()">set sign_state_idx = 1</if>
				<if test="last_order_id == loginId">set sign_state_idx = 2</if>
		WHERE sign_idx = #{param1}
	</update>
	
	<update id="signStateUpdate_first">
		UPDATE sign set sign_state_idx = 2 WHERE sign_idx = #{param1}
	</update>
	
	<select id="signDoMemCnt" resultType="signMemDTO">
		SELECT sm.emp_id, sm.sign_mem_comment, e.emp_name FROM sign_mem sm, employee e WHERE e.emp_id = sm.emp_id AND sign_idx = #{param1} AND sign_mem_state = 1
	</select>
	
	<select id="signImgUpdate" resultType="String">
		SELECT file_new FROM file f, sign s, sign_mem sm WHERE s.sign_idx = #{param1} AND sm.sign_mem_state = 1 AND s.sign_idx = sm.sign_idx AND f.file_sort_idx = 0 AND sm.emp_id = f.file_from
	</select>
	
	<select id="download" resultType="String">
		SELECT file_ori FROM file WHERE file_new = #{param1}
	</select>
	
	<update id="signReturn">
		UPDATE sign_mem set sign_mem_comment = #{param1},sign_mem_ip = #{param2},sign_mem_state=2 WHERE emp_id = #{param3} AND sign_idx = #{param4}
	</update>
	
	<update id="signReturnUpdate">
		UPDATE sign set sign_state_idx = 3 WHERE sign_idx = #{param1}
	</update>
	
	<select id="notiSignNext" resultType="String">
		SELECT emp_id FROM sign_mem sm
			WHERE sign_mem_order = (SELECT max(sign_mem_order) FROM sign_mem sm3 WHERE sign_mem_state = 1 AND sign_idx = #{param1})+1 
			AND sign_idx =#{param1};
	</select>
	
	
   <!-- 결재자 문서 리스트 -->
	<select id="signList_signmem" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type, sm.sign_mem_state 
			FROM sign s, sign_state ss, employee e, sign_mem sm 
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND sm.sign_idx = s.sign_idx AND sm.emp_id = #{param1} AND sm.sign_mem_state = 0
			AND ((SELECT (sign_mem_order)-1 from sign_mem sm2 where emp_id = #{param1} AND sm.sign_idx = sm2.sign_idx) = (SELECT max(sign_mem_order) as sign_mem_order from sign_mem sm3 where sign_mem_state ='1' AND sm.sign_idx = sm3.sign_idx)
			OR (SELECT (sign_mem_order)-1 from sign_mem sm2 where emp_id = #{param1} AND sm.sign_idx = sm2.sign_idx) = 0)
			AND s.sign_date BETWEEN DATE_ADD(NOW(), INTERVAL -2 WEEK ) AND NOW()
			ORDER BY ss.sign_state_idx, sign_idx
	</select>

	<select id="dateSearch_signmem" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type, sm.sign_mem_state 
			FROM sign s, sign_state ss, employee e, sign_mem sm 
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND sm.sign_idx = s.sign_idx AND sm.emp_id = #{param1} AND sm.sign_mem_state = 0
			AND ((SELECT (sign_mem_order)-1 from sign_mem sm2 where emp_id = #{param1} AND sm.sign_idx = sm2.sign_idx) = (SELECT max(sign_mem_order) as sign_mem_order from sign_mem sm3 where sign_mem_state ='1' AND sm.sign_idx = sm3.sign_idx)
			OR (SELECT (sign_mem_order)-1 from sign_mem sm2 where emp_id = #{param1} AND sm.sign_idx = sm2.sign_idx) = 0)
			AND s.sign_date BETWEEN #{param2} AND DATE_ADD(#{param3}, INTERVAL 1 DAY)
			ORDER BY ss.sign_state_idx,sign_idx
	</select>
	
	<select id="signList_endsignmem" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type, sm.sign_mem_state 
			FROM sign s, sign_state ss, employee e, sign_mem sm 
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND sm.sign_idx = s.sign_idx AND sm.emp_id = #{param1} AND sm.sign_mem_state = 1
			AND s.sign_date BETWEEN DATE_ADD(NOW(), INTERVAL -2 WEEK ) AND NOW()
			ORDER BY ss.sign_state_idx, sign_idx
	</select>

	<select id="dateSearch_endsignmem" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type, sm.sign_mem_state 
			FROM sign s, sign_state ss, employee e, sign_mem sm 
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND sm.sign_idx = s.sign_idx AND sm.emp_id = #{param1} AND sm.sign_mem_state = 1
			AND s.sign_date BETWEEN #{param2} AND DATE_ADD(#{param3}, INTERVAL 1 DAY)
			ORDER BY ss.sign_state_idx,sign_idx
	</select>
	
	<select id="signList_returnsignmem" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type, sm.sign_mem_state 
			FROM sign s, sign_state ss, employee e, sign_mem sm 
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND sm.sign_idx = s.sign_idx AND sm.emp_id = #{param1} AND sm.sign_mem_state = 2
			AND s.sign_date BETWEEN DATE_ADD(NOW(), INTERVAL -2 WEEK ) AND NOW()
			ORDER BY ss.sign_state_idx, sign_idx
	</select>

	<select id="dateSearch_returnsignmem" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type, sm.sign_mem_state 
			FROM sign s, sign_state ss, employee e, sign_mem sm 
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND sm.sign_idx = s.sign_idx AND sm.emp_id = #{param1} AND sm.sign_mem_state = 2
			AND s.sign_date BETWEEN #{param2} AND DATE_ADD(#{param3}, INTERVAL 1 DAY)
			ORDER BY ss.sign_state_idx,sign_idx
	</select>
	<!-- /결재자 문서 리스트 -->
	
	
	<!-- 참조자 문서 리스트 -->
	<select id="signList_refermem" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type
			FROM sign s, sign_state ss, employee e, reference r 
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND r.sign_idx = s.sign_idx AND r.emp_id = #{param1} AND (ss.sign_state_type = '결재전' OR ss.sign_state_type = '결재중')
			AND s.sign_date BETWEEN DATE_ADD(NOW(), INTERVAL -2 WEEK ) AND NOW()
			ORDER BY ss.sign_state_idx, sign_idx
	</select>
	
	<select id="dateSearch_refermem" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type
			FROM sign s, sign_state ss, employee e, reference r 
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND r.sign_idx = s.sign_idx AND r.emp_id = #{param1} AND (ss.sign_state_type = '결재전' OR ss.sign_state_type = '결재중')
			AND s.sign_date BETWEEN #{param2} AND DATE_ADD(#{param3}, INTERVAL 1 DAY)
			ORDER BY ss.sign_state_idx,sign_idx
	</select>
	
	<select id="signList_endrefermem" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type
			FROM sign s, sign_state ss, employee e, reference r 
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND r.sign_idx = s.sign_idx AND r.emp_id = #{param1} AND ss.sign_state_type = '결재완료'
			AND s.sign_date BETWEEN DATE_ADD(NOW(), INTERVAL -2 WEEK ) AND NOW()
			ORDER BY ss.sign_state_idx, sign_idx
	</select>
	
	<select id="dateSearch_endrefermem" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type
			FROM sign s, sign_state ss, employee e, reference r 
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND r.sign_idx = s.sign_idx AND r.emp_id = #{param1} AND ss.sign_state_type = '결재완료'
			AND s.sign_date BETWEEN #{param2} AND DATE_ADD(#{param3}, INTERVAL 1 DAY)
			ORDER BY ss.sign_state_idx,sign_idx
	</select>
	
	<select id="signList_returnrefermem" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type
			FROM sign s, sign_state ss, employee e, reference r 
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND r.sign_idx = s.sign_idx AND r.emp_id = #{param1} AND ss.sign_state_type = '반려'
			AND s.sign_date BETWEEN DATE_ADD(NOW(), INTERVAL -2 WEEK ) AND NOW()
			ORDER BY ss.sign_state_idx, sign_idx
	</select>
	
	<select id="dateSearch_returnrefermem" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type
			FROM sign s, sign_state ss, employee e, reference r 
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND r.sign_idx = s.sign_idx AND r.emp_id = #{param1} AND ss.sign_state_type = '반려'
			AND s.sign_date BETWEEN #{param2} AND DATE_ADD(#{param3}, INTERVAL 1 DAY)
			ORDER BY ss.sign_state_idx,sign_idx
	</select>
	
	<!-- /참조자 문서 리스트 -->

<!-- 	
	<select id="signEndList" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type
			FROM sign s, sign_state ss, employee e
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND e.team_idx = #{param1} AND ss.sign_state_type = '결재완료'
			<if test="auth_type == '1'.toString()">
				AND sign_team_open = '공개'
			</if>
			AND s.sign_date BETWEEN DATE_ADD(NOW(), INTERVAL -2 WEEK ) AND NOW()
			ORDER BY sign_idx
	</select>
	
	<select id="dateSearch_endList" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type
			FROM sign s, sign_state ss, employee e
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND e.team_idx = #{param3} AND ss.sign_state_type = '결재완료'
			<if test="auth_type == '1'.toString()">
				AND sign_team_open = '공개'
			</if>
			AND s.sign_date BETWEEN #{param1} AND DATE_ADD(#{param2}, INTERVAL 1 DAY) ORDER BY sign_idx
	</select>
-->	
	<select id="signUserWriteList" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type
			FROM sign s, sign_state ss, employee e
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND e.team_idx = #{param1} AND s.emp_id = #{param2}
			AND s.sign_date BETWEEN DATE_ADD(NOW(), INTERVAL -2 WEEK ) AND NOW()
			ORDER BY ss.sign_state_idx, sign_idx
	</select>
	
	<select id="dateSearch_userList" resultType="signDTO">
		SELECT s.sign_idx , s.sign_title, e.emp_name, s.sign_date, ss.sign_state_type
			FROM sign s, sign_state ss, employee e
			WHERE s.emp_id = e.emp_id AND s.sign_state_idx = ss.sign_state_idx AND e.team_idx = #{param3} AND s.emp_id = #{param4}
			AND s.sign_date BETWEEN #{param1} AND DATE_ADD(#{param2}, INTERVAL 1 DAY) ORDER BY ss.sign_state_idx, sign_idx
	</select>
	
	<select id="signEmp" resultType="String">
      SELECT emp_id from sign where sign_idx = #{param1}
   </select>
   
   <select id="signMemCount" resultType="int">
      SELECT count(emp_id) as emp_id from sign_mem sm WHERE sign_idx = #{param1}
   </select>
   
   <select id="denyMemList" resultType="String">
      SELECT emp_id from sign_mem sm WHERE sign_idx = #{param1} and sign_mem_order <![CDATA[ < ]]> (SELECT sign_mem_order from sign_mem sm4 where sm4.sign_idx = sm.sign_idx and emp_id = #{param2})
   </select>
   
   <select id="denyRefMemList" resultType="String">
         SELECT emp_id from reference WHERE sign_idx = #{param1}
   </select>
   
   <!-- 수정사항 -->
   <select id="signMax" resultType="String">
         SELECT MAX(sign_mem_order) as sign_mem_order from sign_mem sm where sign_idx = #{param1}
   </select>
   
   <select id="signLast" resultType="String">
         SELECT emp_id from sign_mem sm WHERE sign_idx = #{param2} and sign_mem_order = #{param1}
   </select>
	
</mapper>